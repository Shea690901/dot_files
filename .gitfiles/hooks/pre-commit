#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

SCRIPT_PATH="$0"; while [ -h "$SCRIPT_PATH" ]; do SCRIPT_PATH=$(readlink "$SCRIPT_PATH"); done
. "$(dirname $SCRIPT_PATH)/modules/functions.sh"

# return code:
# 0: continue commit
# 1: abort commit
RET=0

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=`git initial-commit`
fi

if [ "$against" = "No commits yet" ]
then
    exit $RET
fi

# prevent master commits
#. "$HOOKS_DIR/modules/prevent-master-commits.sh"
#if [ $? -ne 0 ]; then
#    RET=1
#fi

# prevent-merge-marker-commits
. "$HOOKS_DIR/modules/prevent-merge-marker-commits.sh"
if [ $? -ne 0 ]; then
    RET=1
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --bool hooks.allownonascii)
# If you want to allow automatic Changelog changes set this variable to true.
allowchangelog=$(git config --bool hooks.allowchangelog)

# Redirect output to stderr.
exec 1>&2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] &&
	# Note that the use of brackets around a tr range is ok here, (it's
	# even required, for portability to Solaris 10's /usr/bin/tr), since
	# the square bracket bytes happen to fall in the designated range.
	test $(git diff --cached --name-only --diff-filter=A -z $against |
	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
	cat <<\EOF
Error: Attempt to add a non-ASCII file name.

This can cause problems if you want to work with people on other platforms.

To be portable it is advisable to rename the file.

If you know what you are doing you can disable this check using:

  git config hooks.allownonascii true
EOF
	RET=1
fi

diffstr=`git diff --cached $against | grep -e '^\+.*DONOTCOMMIT.*$'`
if [ -n "$diffstr" ]
then
    printf "\033[1;31mYou have left DONOTCOMMIT in your changes, you can't commit until it has been removed.\033[0m\n"
    printf "\033[1;33m$diffstr\033[0m\n"
    RET=1
fi

# If there are whitespace errors, print the offending file names and fail.
if [ $(git config --int hooks.allowwhitespace) -eq 0 ]
then
	if git diff-index --check --cached $against --
	then
	#	$(git root)/bin/tags && git add $(git root)/src/tags
		:
	else
		RET=1
	fi
fi

# and now update the Changelog file
# !!! ATTENTION !!!
# THIS commit will be missing!!!
if [ $RET -eq 0 ]
then
    if [ "$allowchangelog" == "true" ]
    then
        git changelog -a -x > $(git root)/ChangeLog && git add $(git root)/ChangeLog
    fi
fi

exit $RET
